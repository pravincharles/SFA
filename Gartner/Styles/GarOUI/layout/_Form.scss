@import "../Includes";

@mixin Form() {
	.apc {
		input[type='text'], input[type='number'], textarea {
			color: #222; //BO has color: inherit and in headers, the color is white, which makes the text invisible!
			border: solid 1px #88b0c0;
			border-radius: 3px;
			border-color: #88b0c0 !important; //remove !important after getting rid of jQuery UI
			padding: 6px;
			font-family: Open Sans, Verdana, Arial;
			font-size: 13.3px;

			&.textbox-s {
				padding: 4px;
				font-size: 12px;
			}
		}

		::-webkit-input-placeholder {
			padding-top: 3px;
		}

		input[type='checkbox'] {
			outline: none;
		}

		textarea {
			resize: vertical;
			width: 390px;
			height: 100px;
			line-height: 1.4;

			&.textarea-l {
				height: 150px;
			}

			&.textarea-xl {
				height: 150px;
				width: 550px;
			}

			&.textarea-s { //MUST be below textarea-l because this is user specified, -l is framework specified
				height: 80px;
			}

			&.width-100p { //specific selector
				width: 100%;
			}
		}

		.filedrop-zone {
			font-size: 14px !important; //override Siebel
			height: auto;
			//width: auto;
			position: relative;
			background: white;
			opacity: 1;
			padding: 0;
			border: none;
			width: 100px;

			&.dragover { //zoom to full parent width on dragover
				position: absolute;
				width: 100%;
				height: 100%;
				font-size: 0 !important;
				border: dashed 5px #F00;
			}
		}

		.apc-select2 {
			min-width: 200px;
			font-size: 15px;

			&.apc-select2-small {
				min-width: 100px;
			}
		}

		.fixed-dropwdown {
			width: 250px;
		}

		.char-count {
			position: relative;
			display: inline-block;

			&:after {
				position: absolute;
				top: -7px;
				right: 11px;
				content: attr(data-chars-left);
				background-color: #FFF;
				color: #777;
				padding: 2px;
				font-size: 15px;
				border-radius: 3px;
			}

			&.char-count-hidden {
				&:after {
					display: none;
				}
			}

			&.chars-left-negative {
				&:after {
					color: red;
				}
			}
		}

		[data-editable='false'] {
			.char-count {
				&:after {
					display: none;
				}
			}
		}
	}

	.apc-form {
		> li {
			@include display(flex); //default direction is row
			margin-bottom: 13px;

			> div, .apc-column {
				margin-right: 25px;

				> div { //the container that holds the editable field, this is required in case the user has NOT specified .apc-column for the DIV, cant @include apcColumn because that contains items for inline editing, which is mostly NOT required in an .apc-form
					@include display(flex); //so that any editable icon stays in the same line
					@include align-items(center);
				}

				&.apc-radio {
					> label {
						margin-bottom: 10px;
					}
				}

				&:last-child {
					margin-right: 0;
				}
			}
		}

		.label, label {
			//font-weight: 600;
			//font-family: Lato;
			//font-size: 14px;
		}
	}

	.apc-column {
		> li {
			padding: 0;
			//@include flex(1); //so that checkboxes are centered in a table
		}

		label {
			position: relative;
			display: inline-table; //so that the required star appears just on the right of the label
			margin-bottom: 1px;

			&:after {
				content: ":";
				position: absolute;
				right: -4px;
				top: 0;
			}

			&.required {
				margin-right: 7px; //required if checkbox is used in a form and its required (see DH Request)
				&:before {
					content: "*";
					position: absolute;
					color: $red;
					right: -11px;
					top: 2px;
				}
			}

			&.label-nocolon {
				@include noColon;
			}
		}

		div { //the object that holds the value of the field
			text-overflow: ellipsis;

			&[data-field] { //read only fields need to be truncated if a width is specified
				overflow: hidden;
				text-overflow: ellipsis;
			}
		}

		&.apc-radio {
			label {
				margin-bottom: 7px;
			}
		}

		&.column-inline {
			.column-edit {
				position: relative;
				display: none;

				.column-edit-icons {
					position: absolute;
					bottom: -1.2em;
					right: 0;
				}
			}

			label {
				&:before {
					content: ""; //remove * for required fields in view mode
				}
			}

			&.column-mode-edit {
				.column-edit {
					@include display(flex);
				}

				.column-view {
					display: none;
				}

				> li {
					text-align: left; //without this, label for numerics and save/cancel icons will overlap
				}

				label {
					&.required {
						&:before {
							content: "*"; //required indicator
						}
					}
				}
			}
		}
	}

	.apc-field { //the field container
		> div {
			@include display(flex); //if any elements are added after the field, for example an icon
		}

		&.numeric {
			> div {
				//@include justify-content(flex-end); //not required for form fields, only grid numeric columns need to be right justified
			}
		}
	}

	.column-nowrap {
		.apc-column {
			div, [data-field] { //if fieldtag is specified in data-column, [data-field] is required
				white-space: nowrap;
			}
		}
	}

	.label-left {
		label {
			margin-bottom: 0;
			margin-right: 8px;
		}
	}

	[data-editable='false'] {
		label {
			margin-bottom: 3px;
		}
	}

	.label-nocolon {
		.label, label { //children of any parent containing .label-nocolon, not on the label itself, the label has another .label-nocolon, this is required to set nocolon at a global level rathen than at each item
			@include noColon;
		}
	}

	.label-bottom, [data-column].label-bottom { //second selector to override when parent (in cases when a specific column needs a different label position)
		.apc-column {
			> li:first-child {
				order: 1;

				label, .label {
					margin-bottom: 0;
					margin-top: 3px;
					@include noColon;
				}
			}
		}
	}

	.label-left, [data-column].label-left { //second selector to override when parent has label-bottom
		.apc-column {
			> li:first-child {
				order: 0;
			}
		}
	}

	[data-apcdisabled] {
		.column-edit-icon {
			display: none;
		}
	}

	.apc-pickc {
		border: solid 1px #88b0c0;
		border-radius: 3px;
		position: relative;
		cursor: pointer;

		&:after {
			position: absolute;
			top: -3px;
			right: 0;
			font-family: FontAwesome;
			font-size: 15px;
			content: "\f0d8";
			color: #067B9C;
			background-image: linear-gradient(to top, #ccc 0%, #eee 60%);
			padding: 10px 5px;
			border-top-right-radius: 5px;
			border-bottom-right-radius: 3px;
			border-left: solid 1px #88b0c0;
		}

		&:hover {
			&:after {
				color: darken($linkcolor, 10);
			}
		}

		input[type="text"][readonly="readonly"] { //textbox is readonly in apc-pick, for the time being
			border: none;
			background-color: white !important; //important required to overwrite jQuery
			color: #222 !important; //important required to overwrite jQuery
			width: calc(100% - 30px); //to leave space for the up icon
			cursor: pointer;
		}

		.apc-pickc-clear {
			display: none;
			background: red;
			padding-left: 10px;
			position: absolute;
			top: 6px;
			right: 24px;
			color: $linkcolor;
			font-size: .9em;
			cursor: pointer;

			&:hover {
				color: darken($linkcolor,10);
			}

			&:after {
				font-family: FontAwesome;
				content: "\f00d";
				position: absolute;
				top: 1px;
				left: 0;
			}
		}

		&.apc-pickc-allowclear {
			.apc-pickc-clear {
				display: block;
			}
		}

		&.apc-pick-disabled {
			background-color: #F3F3F3;
			cursor: default;

			&:after {
				color: #555;
				border-left: 0;
				background: none;
			}

			input[type="text"][readonly="readonly"] {
				background-color: #F3F3F3 !important; //important required to overwrite jQuery
				color: #555 !important; //important required to overwrite jQuery
				cursor: default;
			}

			.apc-pickc-clear {
				display: none;
			}
		}

		&.apc-pick-empty {
			.apc-pickc-clear {
				display: none;
			}
		}
	}

	.apc-number {
		border: solid 1px #88b0c0;
		border-radius: 3px;
		position: relative;
		@include user-select(none); //text gets selected on double click of the up down arrows
		@include display(flex);

		input.apc-n[type="text"] {
			@include flex(1);
			border: none;
			border-top-right-radius: 0;
			border-bottom-right-radius: 0;
			outline: none;
		}

		.apc-num-perc {
			position: relative;
			display: none;
			min-width: 31px;
			font-weight: bold;
			margin: 2px 3px 0 0; //top margin required for broken Faktcon Pro font
			@include align-self(center);

			&:before {
				position: absolute;
				font-family: FontAwesome;
				left: -15px;
				top: -2px;
			}

			&.up {
				&:before {
					content: '\f0d8';
					color: green;
				}
			}

			&.down {
				&:before {
					content: '\f0d7';
					color: red;
				}
			}
		}

		&.apc-number-showperc {
			.apc-num-perc {
				display: block;
			}
		}

		.apc-incr-decr {
			position: relative;
			color: #2F849C;
			width: 15px;

			> .apc-id {
				position: absolute;
				right: 0;
				width: 15px;
				height: 16px;
				border-left: solid 1px #88b0c0;
				font-size: 12.5px;
				padding: 1px 0 0 3px;

				&:hover {
					background-color: lighten(#88b0c0, 20);
				}
			}

			> .apc-num-incr {
				top: 0;
				border-bottom: solid 1px #88b0c0;
				padding-bottom: 1px;
				border-top-right-radius: 4px;
			}

			> .apc-num-decr {
				bottom: 0;
				border-bottom-right-radius: 4px;
			}
		}

		&.apc-number-disabled {
			background-color: rgb(235, 235, 228);

			.apc-incr-decr {
				color: #999;

				> .apc-id {
					&:hover {
						background-color: transparent;
					}
				}
			}
		}
	}

	.apc-monthpicker {
		.ui-datepicker-calendar, .ui-datepicker-current, .ui-datepicker-prev, .ui-datepicker-next {
			display: none;
		}
	}

	.apc-dateholder {
		position: relative;

		&:after {
			content: "\f073";
			font-family: FontAwesome;
			position: absolute;
			top: 7px;
			right: 5px;
			color: #999;
			cursor: pointer;
			font-size: 15px;
		}
	}

	.apc-checkbox {
		position: relative !important; //OB
		margin-right: 18px !important; //OB
		width: 18px;
		margin: auto !important; //!important required because [input type='checkbox'] has margin: 0, auto required to center the checkbox in a table
		height: 0;

		&:before {
			position: absolute;
			left: 0;
			top: -12px;
			width: 18px;
			height: 18px;
			background: linear-gradient(to top, #ddd 0%, #eee 60%);
			border: 2px solid $blue-dark;
			color: $blue-dark;
			border-radius: 3px;
			font-family: "FontAwesome";
			font-size: 14px;
			content: " ";
			@include transition(all 0.5s);
		}

		&:checked:before {
			content: "\f00c";
			color: #fff;
			background: linear-gradient(to top, $blue-dark 0%, lighten($blue-dark, 20) 60%);
			border-width: 1px;
			padding-left: 1px;
		}

		&:indeterminate:before {
			content: "\f068"; //fa-minus
			padding-left: 2px;
			width: 19px;
		}

		&[disabled]:before {
			border-color: #777;
			background: #fff;
			color: #777;
		}
	}

	.apc-sort {
		min-width: 180px;
		position: relative;
		cursor: pointer;
		padding-right: 30px !important; // !important to overwrite padding-s
		border-top-right-radius: 5px !important; // !important to overwrite box-radius-xs
		border-bottom-right-radius: 5px !important;

		&:after {
			position: absolute;
			top: 0;
			right: 0;
			height: 100%;
			font-family: FontAwesome;
			font-size: 15px;
			content: "\f0d7";
			color: #067B9C;
			background-image: linear-gradient(to top, #ccc 0, #eee 60%);
			padding: 7px 5px;
			border-top-right-radius: 5px;
			border-bottom-right-radius: 5px;
			border-left: solid 1px #88b0c0;
		}
	}

	.apc-sort-single {
		.apc-sort-single {
			display: block;
		}

		.apc-sort-multiple {
			display: none;
		}
	}

	.apc-search {
		.search-field-container {
			background-image: linear-gradient(to top, #ccc 0, #eee 60%);
			border-right: solid 1px #bbb;
			border-top-left-radius: 3px;
			border-bottom-left-radius: 3px;
			position: relative;
			cursor: pointer;

			&:after {
				font-family: FontAwesome;
				content: "\f0d7";
				position: absolute;
				right: 4px;
				top: 8px;
				color: #067B9C;
			}
		}

		.apc-search-field {
			padding: 7px 18px 0 7px; //right padding for thearrow
		}

		input[type='text'].apc-search-text {
			border: 0;
			border-top-left-radius: 0;
			border-bottom-left-radius: 0;
		}

		.btn-tbsearch-go {
			display: block;
			background-image: linear-gradient(to top, #ccc 0, #eee 60%);
			border-left: solid 1px #bbb;
			cursor: pointer;
			padding: 8px 7px 7px 5px !important;
		}

		&.apc-search-advanced {
			input[type='text'].apc-search-text {
				border-top-right-radius: 0;
				border-bottom-right-radius: 0;
			}

			.search-advanced-btn {
				display: block;
				background-image: linear-gradient(to top, #ccc 0, #eee 60%);
				border-top-right-radius: 3px;
				border-bottom-right-radius: 3px;
				position: relative;
				border-left: solid 1px #bbb;
				cursor: pointer;
				padding: 8px 15px 7px 5px;

				&:after {
					font-family: FontAwesome;
					content: "\f0d8";
					position: absolute;
					right: 4px;
					top: 8px;
					color: #067B9C;
				}
			}
		}

		&.apc-search-single {
			.search-field-container {
				display: none;
			}

			input[type='text'].apc-search-text {
				border-top-left-radius: 3px;
				border-bottom-left-radius: 3px;
			}
		}
	}
}

@mixin noColon() {
	margin-right: 4px;

	&:after {
		content: "";
	}

	&:before {
		right: -10px; //move the star to the left (from -14px)
	}
}
